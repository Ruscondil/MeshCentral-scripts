---
- name: Set recordsize for ZFS filesystem
  shell: zfs set recordsize={{ item.recordsize | default("128k")}} mypool/myfilesystem
  when: filesystem_type in ["zfs", "zfs_nocache", "zfs_primary", "zfs_l2arc"]

- name: Log test details
  ansible.builtin.debug:
    msg:
      - "Testing filesystem: {{ filesystem_type }}"
      - "Testing device: {{ test_device_short }}"
      - "Block size: {{ block_size }}"
      - "Compression: {{ compression_option }}"
      - "recordsize: {{ item.recordsize | default('128k') }}"
      - "Test name: {{ item.name }}"

- name: Run FIO test
  ansible.builtin.shell: >
    fio /tmp/fio_{{ item.name }}.fio --output /tmp/fio_{{ item.name }}_output.json --output-format=json
  register: fio_result
  changed_when: false
  failed_when: fio_result.rc != 0
  with_sequence: >
    start=1 
    end={{ item.repeat | default(1) if filesystem_type in ["zfs", "zfs_l2arc"] else 1 }}
  loop_control:
    loop_var: repeat_index

- name: List test files in the mount point (files only)
  ansible.builtin.shell: >
    find {{ test_mount_point }} -maxdepth 1 -type f -printf "%f\n"
  register: test_files
  changed_when: false

- name: Reset file_results for this test
  ansible.builtin.set_fact:
    file_results: []

- name: Check size and attributes for each test file
  when: test_files.stdout_lines is defined and compression_option != "none" and filesystem_type in ["btrfs"]
  loop: "{{ test_files.stdout_lines }}"
  loop_control:
    loop_var: file_name
  include_tasks: fio_check_attributes.yaml


- name: Get zfs compressed size (raw output)
  ansible.builtin.command: >
    zfs get -Hp -o value used,compressratio mypool/myfilesystem
  register: zfs_info
  when: filesystem_type in ["zfs", "zfs_nocache", "zfs_primary", "zfs_l2arc"]

- name: Set zfs_raw fact
  ansible.builtin.set_fact:
    zfs_raw: "{{ zfs_info.stdout_lines }}"
  when: filesystem_type in ["zfs", "zfs_nocache", "zfs_primary", "zfs_l2arc"] and zfs_info.rc == 0

- name: Save file results to a JSON file on remote host
  ansible.builtin.copy:
    content: >-
      {{
        (file_results if filesystem_type == "btrfs" else
        [ dict(zfs_raw = zfs_raw) ])
        | to_nice_json
      }}
    dest: "/tmp/file_results_{{ item.name }}.json"
  when: compression_option != "none"

- name: Clean up test files
  ansible.builtin.shell: "rm -rf {{ test_mount_point }}/*"
  changed_when: true