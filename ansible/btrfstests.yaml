---
- name: "BTRFS Performance Test with FIO"
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  vars:
    test_device: "/dev/sda5"
    test_device_short: "hdd"
    test_mount_point: "/mnt/test"
    filesystem_type: "btrfs" 
    block_size: 4096
    
    dd_results_path: "./dd_results_{{ filesystem_type }}_{{ test_device_short }}/"
    fio_results_path: "./fio_results_{{ filesystem_type }}_{{ test_device_short }}/"
    hdparm_results_path: "./hdparm_results_{{ filesystem_type }}_{{ test_device_short }}/"
  vars_files:
  vars_files:
    - ./fio/fio_configs_vars.yaml
    - ./dd/dd_vars.yaml
    
  tasks:
    - import_tasks: ./hdparm/hdparm_tests.yaml
    
    - import_tasks: prepare_tasks.yaml

    - name: Create BTRFS filesystem with specified block size
      community.general.filesystem:
        fstype: btrfs
        dev: "{{ test_device }}"
        opts: "-n {{ block_size }}"

    - name: Mount DVD read-only
      ansible.posix.mount:
        path: "{{ test_mount_point }}"
        src: "{{ test_device }}"
        fstype: btrfs
        opts: "defaults,noatime"
        state: mounted

    - name: Create Btrfs subvolume
      shell: |
        btrfs subvolume create {{ test_mount_point }}/testvol
    
    - import_tasks: ./dd/dd_tests.yaml
    
    - import_tasks: fio_run.yaml

    - name: Gather FIO results
      ansible.builtin.fetch:
        src: "/tmp/fio_{{ item }}_output.txt"
        dest: "./fio_results_btrfs_{{ test_device_short }}/{{ inventory_hostname }}/"
        flat: yes
      loop:
        - database_test
        - multimedia_test
        - webserver_test
        - archive_test

    - name: Save FIO configuration to results folder on remote machine
      ansible.builtin.copy:
        content: |
          Test Device: {{ test_device }}
          Test Mount Point: {{ test_mount_point }}
          Filesystem Type: {{ filesystem_type }}

          Database Test:
            RW: {{ fio_config.database_test.rw }}
            RWMixRead: {{ fio_config.database_test.rwmixread }}
            NumJobs: {{ fio_config.database_test.numjobs }}
            Runtime: {{ fio_config.database_test.runtime }}
            IOdepth: {{ fio_config.database_test.iodepth }}
            BSSplit: {{ fio_config.database_test.bssplit }}

          Multimedia Test:
            RW: {{ fio_config.multimedia_test.rw }}
            NumJobs: {{ fio_config.multimedia_test.numjobs }}
            Runtime: {{ fio_config.multimedia_test.runtime }}
            IOdepth: {{ fio_config.multimedia_test.iodepth }}
            BSSplit: {{ fio_config.multimedia_test.bssplit }}

          Webserver Test:
            RW: {{ fio_config.webserver_test.rw }}
            NumJobs: {{ fio_config.webserver_test.numjobs }}
            Runtime: {{ fio_config.webserver_test.runtime }}
            IOdepth: {{ fio_config.webserver_test.iodepth }}
            BSSplit: {{ fio_config.webserver_test.bssplit }}

          Archive Test:
            RW: {{ fio_config.archive_test.rw }}
            NumJobs: {{ fio_config.archive_test.numjobs }}
            Runtime: {{ fio_config.archive_test.runtime }}
            IOdepth: {{ fio_config.archive_test.iodepth }}
            BSSplit: {{ fio_config.archive_test.bssplit }}
        dest: "/tmp/fio_config.txt"

    - name: Fetch FIO configuration file
      ansible.builtin.fetch:
        src: "/tmp/fio_config.txt"
        dest: "{{ fio_results_path }}/fio_config.txt"
        flat: yes
