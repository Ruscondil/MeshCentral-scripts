---
- name: Print current block size
  ansible.builtin.debug:
    msg: "Starting tests for block size: {{ block_size }} on filesystem: {{ filesystem_type }} on device: {{ test_device_short }}"

- name: Set result paths
  set_fact:
    dd_results_path: "{{ results_base_path }}/dd_results_{{ filesystem_type }}_{{ test_device_short }}/block_size_{{ block_size }}"
    fio_results_path: "{{ results_base_path }}/fio_results_{{ filesystem_type }}_{{ test_device_short }}/block_size_{{ block_size }}"
    hdparm_results_path: "{{ results_base_path }}/hdparm_results_{{ filesystem_type }}_{{ test_device_short }}"

- import_tasks: prepare_tasks.yaml

- import_tasks: ./hdparm/hdparm_tests.yaml

- name: Create filesystem
  block:
    - name: Create EXT4, XFS, BTRFS, F2FS filesystem
      community.general.filesystem:
        fstype: "{{ filesystem_type }}"
        dev: "{{ test_device }}"
        opts: "{{ create_opts }}"
        force: true
      when: filesystem_type not in ["zfs", "zfs_nocache", "exfat"]

    - name: Create EXFAT filesystem
      shell: "mkfs.exfat {{ test_device }}"
      when: filesystem_type in ["exfat"]

    - name: Create ZFS pool and filesystem
      block:
        - name: Create ZFS pool
          shell: zpool create mypool {{ test_device }}

        - name: Create ZFS filesystem
          shell: zfs create mypool/myfilesystem
          
        - name: Set ZFS mountpoint
          shell: zfs set mountpoint={{ test_mount_point }} mypool/myfilesystem

        - name: Disable ZFS primary cache
          shell: zfs set primarycache=none mypool/myfilesystem
          when: filesystem_type == "zfs_nocache"

        - name: Disable ZFS secondary cache
          shell: zfs set secondarycache=none mypool/myfilesystem
          when: filesystem_type in ["zfs_nocache", "zfs_primary"]

      when: filesystem_type in ["zfs", "zfs_nocache", "zfs_primary"]

- name: Mount the device
  ansible.posix.mount:
    path: "{{ test_mount_point }}"
    src: "{{ test_device }}"
    fstype: "{{ filesystem_type }}"
    opts: "{{ mount_opts }}"
    state: ephemeral
  when: filesystem_type not in ["zfs", "zfs_nocache"]

- name: Run dd tests
  import_tasks: ./dd/dd_tests.yaml

- name: Run fio tests
  import_tasks: ./fio/fio_run.yaml

- name: Unmount the device
  ansible.posix.mount:
    path: "{{ test_mount_point }}"
    state: unmounted
  when: filesystem_type not in ["zfs", "zfs_nocache"]

- name: Destroy ZFS filesystem and pool
  block:
    - name: Unmount ZFS filesystem
      shell: zfs unmount mypool/myfilesystem
      ignore_errors: true

    - name: Destroy ZFS filesystem
      shell: zfs destroy mypool/myfilesystem
      ignore_errors: true

    - name: Destroy ZFS pool
      shell: zpool destroy mypool
      ignore_errors: true
  when: filesystem_type in ["zfs", "zfs_nocache"]